// Media Queries.
@mixin mq($point, $IE9: false, $query1: min, $query2: width) {
  @if $IE9 == true {
    .lt-ie9 & {
        @content;
    }
    @media screen and (#{$query1}-#{$query2}: $point / $base-font-size +em) {
        @content;
    }
}

@else {
    @media screen and (#{$query1}-#{$query2}: $point / $base-font-size +em) {
        @content;
    }
  }
}


/**
 * Retina Images.
 *
 * USAGE:
 * 
 * div.logo {
 *   background: url("logo.png") no-repeat;
 *   @include image-2x("logo2x.png", 100px, 25px);
 * }
 *
 * OUTPUT:
 *
 * div.logo {
 *   background: url("logo.png") no-repeat;
 * }
 * @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
 *   div.logo {
 *     background-image: url("logo2x.png");
 *     background-size: 100px 25px;
 *   }
 * }
 *
 * See http://web-design-weekly.com/blog/2013/05/12/handy-sass-mixins/
 */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}


/**
 * Background Image.
 */
@mixin background-image($image, $color: #000000, $image-directory: "../images/", $position: 50% 50%, $repeat: no-repeat) {
  background: {
    color: $color;
    image: url($image-directory + $image);
    position: $position;
    repeat: $repeat;
  }
}


/**
 * HEX to RGB.
 */
@mixin rgba($color, $value) {
        background-color: $color;
        background-color: rgba($color, $value);
}